<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.story.dao.CommentDao">

    <insert id="saveComment">
        insert into comment (ideaId, content, userId, commentTime, parentId)
        value (#{ideaId}, #{content}, #{userId}, #{commentTime}, #{parentId});
    </insert>

    <select id="findByIdeaIdAndParentCommentNull" resultType="com.story.domain.Comment">
        select c.*, u.userName, u.sign, u.avatar from comment c inner join user u on c.userId = u.userId where ideaId = #{ideaId} and parentId is null;
    </select>

    <select id="findByIdeaIdAndParentId" resultType="com.story.domain.Comment">
        select c.*, u.userName, u.sign, u.avatar from comment c inner join user u on c.userId = u.userId where ideaId = #{ideaId} and parentId = #{parentId};
    </select>

    <select id="countComments" resultType="java.lang.Integer">
        select count(*) from comment where ideaId = #{ideaId};
    </select>

    <select id="notifyMessages" resultType="com.alibaba.fastjson.JSONObject">
        select c.*, i.content, u.userName, u.avatar from (comment c inner join idea i on c.ideaId = i.ideaId) inner join user u on c.userId = u.userId where c.userId = #{userId} order by c.commentTime desc;
    </select>

    <update id="updateComment">
        update comment set content = #{content}, commentTime = #{commentTime} where commentId = #{commentId};
    </update>

    <delete id="deleteComment">
        delete from comment where commentId = #{commentId};
    </delete>

</mapper>